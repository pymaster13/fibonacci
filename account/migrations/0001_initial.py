# Generated by Django 4.0.4 on 2022-05-04 22:34

import account.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TgAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_nickname', models.CharField(max_length=128, unique=True, verbose_name='Telegram nickname')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Telegram code')),
            ],
        ),
        migrations.CreateModel(
            name='TgCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('tg_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.tgaccount')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=128, unique=True, validators=[django.core.validators.EmailValidator], verbose_name='Email')),
                ('first_name', models.CharField(max_length=128, null=True, verbose_name='First name')),
                ('last_name', models.CharField(max_length=128, null=True, verbose_name='Last name')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('invite_code', models.CharField(max_length=128, null=True, unique=True, verbose_name='Invite code')),
                ('groups', models.ManyToManyField(null=True, related_name='account_groups', to='auth.group', verbose_name='Groups')),
                ('inviter', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('telegram', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.tgaccount', verbose_name='Telegram account')),
                ('user_permissions', models.ManyToManyField(null=True, related_name='account_perms', to='auth.permission', verbose_name='Permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
